@model Linguist.Web.Models.StatisticsViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.min.js"></script>

@{
    ViewBag.Title = "Statistics";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<h2>Статистика</h2>

<div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1 col-xs-10 col-xs-offset-1" style="text-align: left">

    <hr />
    <div class="col-md-6 col-sm-6 col-xs-12">
        <canvas id="wordsRememberChart" width="100" height="100"></canvas>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        <canvas id="wordsAddedChart" width="100" height="100"></canvas>
    </div>

    <div class="col-md-6 col-sm-6 col-xs-12">
        <canvas id="trainingsChart" width="100" height="100"></canvas>
    </div>
    <div class="col-md-6 col-sm-6 col-xs-12">
        <canvas id="answersChart" width="100" height="100"></canvas>
    </div>

</div>


<script>
    var ctxRemembered = document.getElementById("wordsRememberChart").getContext('2d');

    dataRemembered = {
        datasets: [{
            data: [@Model.WordsFrom0To3, @Model.WordsFrom4To7, @Model.WordsFrom8To9],
            backgroundColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)'
            ]
        }],

        labels: [
            'Незапомненные слова',
            'Средне запомненные слова',
            'Хорошо запомненные слова'
        ]
    };

    options = {
        cutoutPercentage: 50,
        rotation: -0.5 * Math.PI,
        circumference: 2 * Math.PI,
        animation: {
            animateRotate: true,
            animateScale: false
        }
    };

    var wordsRememberChart = new Chart(ctxRemembered, {
        type: 'doughnut',
        data: dataRemembered,
        options: options
    });

    var ctxAdded = document.getElementById("wordsAddedChart").getContext('2d');

    dataAdded = {
        datasets: [{
            data: [@Model.AllWords - @Model.WordsAddedThisMonth, @Model.WordsAddedThisMonth],
            backgroundColor: [
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ]
        }],

        labels: [
            'Ранее добавленные слова',
            'Добавленные в этом месяце слова'
        ]
    };

    var wordsAddedChart = new Chart(ctxAdded, {
        type: 'doughnut',
        data: dataAdded,
        options: options
    });

    var ctxTrainings = document.getElementById("trainingsChart").getContext('2d');

    trainingsData = {
        datasets:
        [
            {
                label: 'Пройдено тренировок',
                data: [@string.Join(",", Model.TrainingsTakenPerWeek)],
                borderColor: ['rgba(75, 192, 192, 1)']
            },
            {
                label: 'Пройдено тестов',
                data: [@string.Join(",", Model.TestsTakenPerWeek)],
                borderColor: ['rgba(54, 162, 235, 1)']
            }
        ],
        labels: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']
    };

    trainingsOptions = {
        animation: {
            animateRotate: true,
            animateScale: true
        },
        scales: {
            yAxes: [{
                ticks: {
                    max: 30
                }
            }]
        }
    };

    var trainingsChart = new Chart(ctxTrainings, {
        type: 'line',
        data: trainingsData,
        options: trainingsOptions
    });

    var ctxAnswers = document.getElementById("answersChart").getContext('2d');

    answersData = {
        datasets:
        [
            {
                label: 'Правильные ответы',
                data: [23, 35, 46, 42, 22, 33],
                borderColor: ['rgba(75, 192, 192, 1)']
            },
            {
                label: 'Неправильные ответы',
                data: [34, 29, 25, 9, 8, 7],
                borderColor: ['rgba(255, 99, 132, 1)']
            }
        ],
        labels: ['Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб', 'Вс']
    };

    answersOptions = {
        animation: {
            animateRotate: true,
            animateScale: true
        }
    };

    var answersChart = new Chart(ctxAnswers, {
        type: 'line',
        data: answersData,
        options: answersOptions
    });

</script>